from Plugins.Plugin import PluginDescriptor
from Components.PluginComponent import plugins
from OpenPanel import OpenPanel
from Tools.XMLTools import stringToXML
#import os, sys

class e2Plugins(object):
	
	def getPluginName(self, name):
		return name
	
	def makePluginHelp(self):
		n=0
		xml = "<?xml version=\"1.0\" encoding=\"utf-8\"?>\n<!-- plugins.xml auto generated by OpenPanel Plugin - do not edit! -->\n<entry name=\"Plugins &gt;\" shortcut=\"blue\" help=\"(blue) auto generatet plugin list!\">\n"
		twins=[]
		keys = ["red","green","yellow","blue","1","2","3","4","5","6","7","8","9","0"]
		pluginlist = plugins.getPlugins([PluginDescriptor.WHERE_PLUGINMENU, PluginDescriptor.WHERE_EXTENSIONSMENU, PluginDescriptor.WHERE_EVENTINFO])
		pluginlist.sort(key = lambda p: p.name)
		for plugin in pluginlist:
			if plugin.name in twins:
				pass
			else:
				if n < len(keys):
					key =  keys[n]
				else:
					key = ""
				n +=1
				twins.append(plugin.name)
				xml += "\t<plugin name=\"%s\" target=\"%s\" shortcut=\"%s\"  help=\"%s\" exit=\"no\">\n\t\t<code>\n</code>\n\t</plugin>\n\n" % (stringToXML(plugin.name), stringToXML(plugin.name), key, stringToXML(plugin.description))
				
		xml += "</entry>\n"
		f = open("/etc/plugins.xml", "w")
		f.write(xml)
		f.close()
		